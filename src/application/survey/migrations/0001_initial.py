# Generated by Django 2.1 on 2018-08-13 16:52

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Agreement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('file', models.FileField(upload_to='agreements/', verbose_name='Agreement file')),
            ],
            options={
                'verbose_name': 'Agreement',
                'verbose_name_plural': 'Agreement',
                'db_table': 'chl_agreements',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Assortment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_public', models.BooleanField(default=True, verbose_name='Is public')),
            ],
            options={
                'verbose_name': 'Store good',
                'verbose_name_plural': 'Assortment',
                'db_table': 'chl_assortment',
                'ordering': ['good__name', 'store__client__name', 'store__code'],
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_public', models.BooleanField(default=True, verbose_name='Is public')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'Client',
                'verbose_name_plural': 'Clients',
                'db_table': 'chl_clients',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Good',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_public', models.BooleanField(default=True, verbose_name='Is public')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('image', models.FileField(blank=True, null=True, upload_to='goods/', verbose_name='Image')),
            ],
            options={
                'verbose_name': 'Good',
                'verbose_name_plural': 'Production',
                'db_table': 'chl_goods',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Import',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.CharField(max_length=255, verbose_name='File name')),
                ('date_start', models.DateTimeField(auto_now_add=True, verbose_name='Date start')),
                ('date_end', models.DateTimeField(blank=True, null=True, verbose_name='Date end')),
                ('rows_count', models.IntegerField(blank=True, null=True, verbose_name='Rows count')),
                ('rows_process', models.IntegerField(blank=True, default=0, verbose_name='Rows process')),
                ('status', models.IntegerField(choices=[(1, 'In process'), (2, 'Finished'), (3, 'Canceled'), (4, 'Error')], default=1, verbose_name='Status')),
                ('report_text', models.TextField(blank=True, null=True, verbose_name='Report text')),
            ],
            options={
                'verbose_name': 'Data import',
                'verbose_name_plural': 'Data imports',
                'db_table': 'chl_imports',
                'ordering': ['-date_start'],
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_public', models.BooleanField(default=True, verbose_name='Is public')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'Region',
                'verbose_name_plural': 'Regions',
                'db_table': 'chl_regions',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_public', models.BooleanField(default=True, verbose_name='Is public')),
                ('code', models.CharField(blank=True, max_length=100, unique=True, verbose_name='Code')),
                ('region', models.CharField(blank=True, max_length=100, verbose_name='Region')),
                ('address', models.TextField(blank=True, max_length=500, verbose_name='Address')),
                ('auto_coord', models.BooleanField(default=False, verbose_name='Auto calc coordinates')),
                ('longitude', models.FloatField(blank=True, null=True, verbose_name='Longitude')),
                ('latitude', models.FloatField(blank=True, null=True, verbose_name='Latitude')),
                ('days_of_week', models.CharField(blank=True, default='', max_length=100, verbose_name='Days of weeks')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='client_store', to='survey.Client', verbose_name='Chain stores')),
                ('region_o', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='survey.Region', verbose_name='Region')),
            ],
            options={
                'verbose_name': 'Store',
                'verbose_name_plural': 'Stores',
                'db_table': 'chl_stores',
                'ordering': ['client__name', 'code'],
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_public', models.BooleanField(default=True, verbose_name='Is public')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Name')),
                ('description', models.TextField(verbose_name='Description')),
                ('instruction', models.FileField(blank=True, null=True, upload_to='instructions/', verbose_name='Instruction file')),
                ('instruction_url', models.CharField(blank=True, max_length=100, verbose_name='Instruction url')),
                ('money', models.FloatField(default=0, verbose_name='Sum')),
                ('is_once', models.BooleanField(blank=True, default=False, verbose_name='Execution once')),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='task_client', to='survey.Client', verbose_name='Client')),
                ('clients', models.ManyToManyField(blank=True, related_name='task_clients', to='survey.Client', verbose_name='Clients')),
                ('regions', models.ManyToManyField(blank=True, related_name='task_regions', to='survey.Region', verbose_name='Regions')),
                ('store', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='task_store', to='survey.Store', verbose_name='Store')),
                ('stores', models.ManyToManyField(blank=True, related_name='task_stores', to='survey.Store', verbose_name='Stores')),
            ],
            options={
                'verbose_name': 'Task',
                'verbose_name_plural': 'Tasks',
                'db_table': 'chl_tasks',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TasksExecution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_start', models.DateTimeField(auto_now_add=True, verbose_name='Date start')),
                ('date_end', models.DateTimeField(blank=True, null=True, verbose_name='Date end')),
                ('status', models.IntegerField(choices=[(1, 'Started'), (2, 'Finished'), (3, 'Checked'), (4, 'Payed')], default=1, verbose_name='Status')),
                ('image', models.FileField(blank=True, null=True, upload_to='tasks/exec/%Y/%m/%d/', verbose_name='Confirmation image')),
                ('store', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='task_e_store', to='survey.Store', verbose_name='Store')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task', to='survey.Task', verbose_name='Task')),
            ],
            options={
                'verbose_name': 'Task execution',
                'verbose_name_plural': 'Tasks execution',
                'db_table': 'chl_tasks_executions',
                'ordering': ['-date_start'],
            },
        ),
        migrations.CreateModel(
            name='TasksExecutionImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.FileField(blank=True, db_index=True, null=True, upload_to='tasks/exec/%Y/%m/%d/', verbose_name='Image')),
                ('status', models.CharField(db_index=True, default='Анализ изображения в процессе...', max_length=1000, verbose_name='Unique status')),
                ('md5', models.CharField(blank=True, max_length=32, null=True, verbose_name='Md5 sum')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='survey.TasksExecution', verbose_name='Task execution')),
            ],
            options={
                'verbose_name': 'Confirmation image',
                'verbose_name_plural': 'Confirmation images',
                'db_table': 'chl_tasks_executions_images',
                'ordering': ['-task__date_start', 'id'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('telegram_id', models.IntegerField(blank=True, null=True, unique=True, verbose_name='Telegram id')),
                ('language_code', models.CharField(blank=True, max_length=10, null=True, verbose_name='Language')),
                ('last_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Last name')),
                ('first_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='First name')),
                ('username', models.CharField(blank=True, max_length=255, null=True, verbose_name='Telegram username')),
                ('is_telegram', models.BooleanField(default=True, verbose_name='Is telegram')),
                ('is_register', models.BooleanField(default=False, verbose_name='Is register')),
                ('phone', models.CharField(blank=True, max_length=100, null=True, verbose_name='Phone')),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Name')),
                ('surname', models.CharField(blank=True, max_length=100, null=True, verbose_name='Surname')),
                ('advisor', models.CharField(blank=True, max_length=255, null=True, verbose_name='Advisor fio')),
                ('bank_card', models.CharField(blank=True, max_length=100, null=True, verbose_name='Bank card')),
                ('e_money', models.CharField(blank=True, max_length=100, null=True, verbose_name='Online wallet')),
                ('money', models.FloatField(blank=True, default=0, verbose_name='Balance')),
                ('email', models.CharField(blank=True, max_length=100, null=True, verbose_name='E-mail')),
                ('city', models.CharField(blank=True, max_length=100, null=True, verbose_name='City/Region')),
                ('date_join', models.DateTimeField(auto_now_add=True, verbose_name='Date join')),
            ],
            options={
                'verbose_name': 'Telegram user',
                'verbose_name_plural': 'Telegram users',
                'db_table': 'telegram_users',
                'ordering': ['username'],
            },
        ),
        migrations.AddField(
            model_name='tasksexecution',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task_user', to='survey.User', verbose_name='User'),
        ),
        migrations.AddField(
            model_name='assortment',
            name='good',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assortment_good', to='survey.Good', verbose_name='Good'),
        ),
        migrations.AddField(
            model_name='assortment',
            name='store',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assortment_store', to='survey.Store', verbose_name='Store'),
        ),
        migrations.AlterUniqueTogether(
            name='assortment',
            unique_together={('good', 'store')},
        ),
    ]
