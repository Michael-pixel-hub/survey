# Generated by Django 2.1 on 2018-08-30 21:08

from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('survey', '0002_auto_20180823_1654'),
    ]

    operations = [
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_public', models.BooleanField(default=True, verbose_name='Is public')),
                ('order', models.PositiveIntegerField(default=99999999, editable=False)),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Name')),
                ('value', models.TextField(help_text='Formatting telegram message', verbose_name='Value')),
            ],
            options={
                'verbose_name': 'Menu item',
                'verbose_name_plural': 'Menu',
                'db_table': 'profi_telegram_menu',
                'ordering': ['order'],
            },
            managers=[
                ('object', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_start', models.DateField(blank=True, null=True, verbose_name='Date start')),
                ('date_end', models.DateField(blank=True, null=True, verbose_name='Date end')),
                ('status', models.CharField(choices=[('new', 'New order'), ('checked', 'Checked'), ('invoice', 'Invoice'), ('wait', 'Wait working'), ('finished', 'Finished')], default='new', max_length=20, verbose_name='Status')),
                ('date_create', models.DateTimeField(auto_now_add=True, verbose_name='Date create')),
                ('date_finish', models.DateTimeField(blank=True, null=True, verbose_name='Date finish')),
                ('is_not_moderate', models.BooleanField(default=False, verbose_name='Is not moderate')),
                ('not_moderate_description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('is_moderate', models.BooleanField(default=False, verbose_name='Is moderate')),
                ('moderate_description', models.TextField(blank=True, null=True, verbose_name='Comment')),
                ('is_invoice', models.BooleanField(default=False, verbose_name='Is invoice')),
                ('invoice_description', models.TextField(blank=True, null=True, verbose_name='Comment')),
                ('invoice_file', models.FileField(blank=True, null=True, upload_to='profi/invoices/', verbose_name='File')),
                ('is_finished', models.BooleanField(default=False, verbose_name='Is finished')),
                ('finished_description', models.TextField(blank=True, null=True, verbose_name='Comment')),
                ('clients', models.ManyToManyField(blank=True, related_name='order_clients', to='survey.Client', verbose_name='Clients')),
                ('regions', models.ManyToManyField(blank=True, related_name='order_regions', to='survey.Region', verbose_name='Regions')),
                ('stores', models.ManyToManyField(blank=True, related_name='order_stores', to='survey.Store', verbose_name='Stores')),
            ],
            options={
                'verbose_name': 'Order',
                'verbose_name_plural': 'Orders',
                'db_table': 'profi_orders',
                'ordering': ['-date_create'],
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_public', models.BooleanField(default=True, verbose_name='Is public')),
                ('description', models.CharField(blank=True, max_length=200, null=True, verbose_name='Description')),
                ('file', models.FileField(upload_to='profi/reports/%Y/%m/%d/', verbose_name='File')),
                ('date_upload', models.DateTimeField(auto_now_add=True, verbose_name='Date upload')),
            ],
            options={
                'verbose_name': 'Report',
                'verbose_name_plural': 'Reports',
                'db_table': 'profi_reports',
                'ordering': ['-date_upload'],
            },
        ),
        migrations.CreateModel(
            name='String',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='System name')),
                ('category', models.CharField(max_length=255, verbose_name='Category')),
                ('value', models.TextField(help_text='Formatting telegram message', max_length=1000, verbose_name='Value')),
            ],
            options={
                'verbose_name': 'Telegram message/button',
                'verbose_name_plural': 'Telegram messages/buttons',
                'db_table': 'profi_telegram_strings',
                'ordering': ['category', 'name'],
            },
            managers=[
                ('object', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_public', models.BooleanField(default=True, verbose_name='Is public')),
                ('order', models.PositiveIntegerField(default=99999999, editable=False)),
                ('name', models.CharField(max_length=1000, verbose_name='Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('price', models.FloatField(default=0, help_text='For a unit of work or goods', verbose_name='Price')),
                ('is_offered', models.BooleanField(default=False, verbose_name='Is offered user')),
                ('date_offered', models.DateTimeField(blank=True, null=True, verbose_name='Date offered')),
                ('type', models.CharField(choices=[('good', 'Good job')], default='good', max_length=10, verbose_name='Type')),
            ],
            options={
                'verbose_name': 'Task',
                'verbose_name_plural': 'Tasks',
                'db_table': 'profi_telegram_tasks',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('telegram_id', models.IntegerField(blank=True, null=True, unique=True, verbose_name='Telegram id')),
                ('telegram_language_code', models.CharField(blank=True, max_length=10, null=True, verbose_name='Language')),
                ('telegram_last_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Last name')),
                ('telegram_first_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='First name')),
                ('telegram_username', models.CharField(blank=True, max_length=255, null=True, verbose_name='Telegram username')),
                ('is_telegram', models.BooleanField(default=True, verbose_name='Is telegram')),
                ('is_register', models.BooleanField(default=False, verbose_name='Is register')),
                ('company_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Company name')),
                ('company_inn', models.CharField(blank=True, max_length=100, null=True, verbose_name='Company INN')),
                ('fio', models.CharField(blank=True, max_length=200, null=True, verbose_name='FIO')),
                ('phone', models.CharField(blank=True, max_length=100, null=True, verbose_name='Phone')),
                ('email', models.CharField(blank=True, max_length=100, null=True, verbose_name='E-mail')),
                ('date_join', models.DateTimeField(auto_now_add=True, verbose_name='Date join')),
                ('is_manager', models.BooleanField(default=False, verbose_name='Is manager')),
            ],
            options={
                'verbose_name': 'Service user',
                'verbose_name_plural': 'Service users',
                'db_table': 'profi_telegram_users',
                'ordering': ['-date_join'],
            },
        ),
        migrations.AddField(
            model_name='task',
            name='author',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='task_author', to='profi.User', verbose_name='Author'),
        ),
        migrations.AddField(
            model_name='report',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='profi.User', verbose_name='User'),
        ),
        migrations.AddField(
            model_name='order',
            name='task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_task', to='profi.Task', verbose_name='Task'),
        ),
        migrations.AddField(
            model_name='order',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_user', to='profi.User', verbose_name='User'),
        ),
    ]
